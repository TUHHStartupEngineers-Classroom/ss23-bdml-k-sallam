{
  "hash": "83fb73f06fc23e17cc6154f0ddef35a9",
  "result": {
    "markdown": "---\ntitle: \"03 Automated Machine Learning with H20\"\ndate: '2023-06-08'\noutput:\n  html_document:\n    toc: true\n    toc_float: true\n    df_print: paged\n    collapsed: false\n    number_sections: true\n    toc_depth: 3\n    code_folding: hide\n---\n\n\n\n\n# Automated Machine Learning with H20 (I) Challenge\n\n\n## Loading libraries\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-1_5a11c5a37b1213a57e5bdcba7f0194c9'}\n\n```{.r .cell-code}\nlibrary(h2o)\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(skimr)\nlibrary(GGally)\nlibrary(ggplot2)\nlibrary(rmarkdown)\nlibrary(rsample)\nlibrary(recipes)\nlibrary(PerformanceAnalytics)\n```\n:::\n\n\n\n## Q1:\n\nThe answer is C\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-2_44c6c951cb31adb5c90ce5f16b180230'}\n\n```{.r .cell-code}\n#Q1\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"income\")) %>%\n  plot_ggpairs(Attrition)\n#The answer is C\n```\n:::\n\n\n\n## Q2:\n\nThe answer is D\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-3_c26098df412ea898ddc9d779f5e6cfde'}\n\n```{.r .cell-code}\n#Q2\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"PercentSalaryHike\")) %>%\n  plot_ggpairs(Attrition)\n\n#The answer is D\n```\n:::\n\n\n\n## Q3\n\nThe answer is B\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-4_360c6c1cd9ed4d58e0d4c2be9514f558'}\n\n```{.r .cell-code}\n#Q3\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"StockOptionLevel\")) %>%\n  plot_ggpairs(Attrition)\n\n#The answer is B\n```\n:::\n\n\n## Q4\n\nThe answer is A\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-5_2af043c0b2cf1bcb8de9584f894fe900'}\n\n```{.r .cell-code}\n#Q4\n\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"EnvironmentSatisfaction\")) %>%\n  plot_ggpairs(Attrition)\n\n#The answer is A\n```\n:::\n\n\n## Q5\n\nThe answer is B\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-6_22af55a1f06e116c97861b87fa312207'}\n\n```{.r .cell-code}\n#Q5\n\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"WorkLifeBalance\")) %>%\n  plot_ggpairs(Attrition)\n\n#The answer is B\n```\n:::\n\n\n## Q6\n\nThe answer is A\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-7_128153b2a996f0d49455a3f137eae4b7'}\n\n```{.r .cell-code}\n#Q6\n\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"JobInvolvement\")) %>%\n  plot_ggpairs(Attrition)\n\n#The answer is A\n```\n:::\n\n\n## Q7\n\nThe answer is B\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-8_73246540d227ee072960d359ea45da26'}\n\n```{.r .cell-code}\n#Q7\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"OverTime\")) %>%\n  plot_ggpairs(Attrition)\n\n#The answer is B\n```\n:::\n\n\n## Q8\n\nThe answer is B\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-9_32cb9e62679d97766c37a3070bac50fb'}\n\n```{.r .cell-code}\n#Q8\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"TrainingTimesLastYear\")) %>%\n  plot_ggpairs(Attrition)\n\n#The answer is B\n```\n:::\n\n\n## Q9\n The answer is B\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-10_5c651c223d0dc694a8ad62e7dccb4b8b'}\n\n```{.r .cell-code}\n#Q9\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"YearsAtCompany\")) %>%\n  plot_ggpairs(Attrition)\n#The answer is B\n```\n:::\n\n\n## Q10\n\nThe answer is C\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-11_a0cffc469b9b2b16cac053feef8ef431'}\n\n```{.r .cell-code}\n#Q 10\nemployee_attrition_tbl %>%\n  select(Attrition, contains(\"YearsSinceLastPromotion\")) %>%\n  plot_ggpairs(Attrition)\n\n#The answer is C\n```\n:::\n\n\n\n# Automated Machine Learning with H20 (II) Challenge\n\n\n## Loading data\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-12_6f3bc131a449c3c1857922e52ecb4d85'}\n\n```{.r .cell-code}\nproduct_backorders_tbl <- read_csv(\"product_backorders.csv\")\n```\n:::\n\n\n\n\n## Split into test and train\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-13_465077342b91f58c9ceb3607609dc650'}\n\n```{.r .cell-code}\nset.seed(seed = 1113)\nsplit_obj <- rsample::initial_split(product_backorders_tbl, prop = 0.85)\n```\n:::\n\n\n\n## Assign training and test data\n\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-14_13b63f35f3f9ce0a9cfacdf1b21848ba'}\n\n```{.r .cell-code}\ntrain_readable_tbl<- training(split_obj)\ntest_readable_tbl <- testing(split_obj)\n\n\n  recipe_obj <- recipe( went_on_backorder~., data = train_readable_tbl) %>%\n  step_zv(all_predictors()) %>%\n  prep()\n\ntrain_tbl <- bake(recipe_obj, new_data = train_readable_tbl)\ntest_tbl  <- bake(recipe_obj, new_data = test_readable_tbl)\n\n #set the predictor names\n predictors <- c(\"national_inv\", \"lead_time\", \"forecast_3_month\", \"sales_3_month\")\n```\n:::\n\n\n\n## specify the response\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-15_2937e84a4cf522e06b968fbef1892afa'}\n\n```{.r .cell-code}\n response <- \"went_on_backorder\"\n```\n:::\n\n\n## Automated machine learning Model\n\n### Initiate H2O\n\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-16_c9111fc248ec273b6676ff1a5eaccb6a'}\n\n```{.r .cell-code}\nh2o.init()\n```\n:::\n\n\n\n### Split data into a training and a validation data frame\n\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-17_5fd5597469fb9a82cb47c715761fbec6'}\n\n```{.r .cell-code}\n# Setting the seed is just for reproducability\n split_h2o <- h2o.splitFrame(as.h2o(train_tbl), ratios = c(0.85), seed = 1234)\n train_h2o <- split_h2o[[1]]\n valid_h2o <- split_h2o[[2]]\n test_h2o  <- as.h2o(test_tbl)\n```\n:::\n\n\n\n\n### Set the target and predictors\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-18_aac93cb1af29b77f3fba1e5ee7f20d6e'}\n\n```{.r .cell-code}\n y <- response\n x <- setdiff(names(train_h2o), y)\n```\n:::\n\n\n### Predicting using Leader Model\n\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-19_df96c663cbfaec753d15923c41f53ea0'}\n\n```{.r .cell-code}\n ?h2o.automl\n\n automl_models_h2o <- h2o.automl(\n   x = x,\n   y = y,\n   training_frame    = train_h2o,\n   validation_frame  = valid_h2o,\n   leaderboard_frame = test_h2o,\n   max_runtime_secs  = 15,\n   nfolds            = 5\n )\n automl_models_h2o@leaderboard\n\n\n Model<-automl_models_h2o@leader\n```\n:::\n\n\n\n### Saving The Leader Model\n\n\n::: {.cell hash='03_ml_aut_cache/html/unnamed-chunk-20_56b6b16c96c0d97109be00dbea47d032'}\n\n```{.r .cell-code}\nh2o.saveModel(Model,path = \"ml_journal-KhaledSallam\")\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}